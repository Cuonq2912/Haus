version: '3.9'

services:

  mysql:
    image: mysql:8.0
    container_name: mysql
    cap_add:
      - SYS_NICE
    restart: always
    environment:
      - MYSQL_DATABASE=root
      - MYSQL_ROOT_PASSWORD=
    ports:
      - '3306:3306'
    volumes:
      - mysql_data:/var/lib/mysql
      - ./initdb.sql:/docker-entrypoint-initdb.d/initdb.sql
    networks:
      - default

#  redis:
#    image: redis:6.2-alpine
#    container_name: redis
#    hostname: redis
#    ports:
#      - '6379:6379'
#    environment:
#      - ALLOW_EMPTY_PASSWORD=yes
#      - REDIS_DISABLE_COMMANDS=FLUSHDB;FLUSHALL
#    networks:
#      - backend
#
#  zookeeper:
#    image: confluentinc/cp-zookeeper:latest
#    container_name: zookeeper
#    environment:
#      ZOOKEEPER_CLIENT_PORT: 2181
#      ZOOKEEPER_TICK_TIME: 2000
#    ports:
#      - '22181:2181'
#    healthcheck:
#      test: [ "CMD", "echo", "ruok", "|", "nc", "-z", "localhost", "2181" ]
#      interval: 10s
#      timeout: 5s
#      retries: 5
#
#  kafka:
#    image: confluentinc/cp-kafka:latest
#    container_name: kafka
#    depends_on:
#      zookeeper:
#        condition: service_healthy
#    ports:
#      - '29092:29092'
#    environment:
#      KAFKA_BROKER_ID: 1
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
#      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  api-service:
    container_name: api-container-1
    build:
      context: ./
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - '8080:8080'
    networks:
      - backend

#  api-service-test:
#    container_name: api-container-2
#    image: api-image-sample
#    ports:
#      - '8081:8080'
#    networks:
#      - backend
networks:
  backend:
    driver: bridge